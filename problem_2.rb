#problem_2.rb
#Even Fibonacci Numbers
# Each new term in the Fibonacci sequence is generated by adding the previous #two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not #exceed four million, find the sum of the even-valued terms.

fibonacci_array = [1, 2]

number = 0
i = 2 #start at third point in the array
##populate the fibonacci array with fibonacci numbers up to  4,000,000
while  number < 4000000
number =  fibonacci_array[i-1] + fibonacci_array[i-2]
fibonacci_array.push(number)
i += 1
end
# print fibonacci_array
#now that we have all the numbers, lets find the sum of the even valued terms
#by mapping them all to a new array and then using the reduce method...

even_array = fibonacci_array.select { |number| number.even? }
#print even_array
sum = even_array.reduce(:+)
print sum
#print sum


